import { useQuery } from "@tanstack/react-query";
import { useRouter } from "next/router";
import React, {useEffect, useState, useRef} from "react";
import axios from "axios";

export default function ingredientsDeliveryDetailPage() {
    const router = useRouter();
    const { salePostId } = router.query;

    // ÏÉÅÌÉú Í¥ÄÎ¶¨
    const [openModal, setModal] = useState(false);
    const [totalPrice, setTotalPrice] = useState(0);
    const [quantity, setQuantity] = useState(1);
    const [phoneNumber, setPhoneNumber] = useState("");
    const [email, setEmail] = useState("");
    const [errorMessage, setErrorMessage] = useState("");

    /**
     * Îç∞Ïù¥ÌÑ∞ Î∞òÌôò
     */
    const fetchSalePostData = async () => {
        const response = await axios.get(`http://localhost:8081/sale/posts/${router.query.salePostId}`);
        return response.data;
      };

    // Íµ¨Îß§ API Ìò∏Ï∂ú
    const handlePurchaseRequest = async () => {
        try {
            const response = await axios.post(`http://localhost:8081/sale/posts/${salePostId}/purchase`, {
                "phoneNumber": phoneNumber,
                "email": email,
                "price": data.price,
                "quantity": quantity
            });
            alert("Íµ¨Îß§Í∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§. ‚Ä®Íµ¨Îß§ ÌòÑÌô©ÏùÑ Ï°∞ÌöåÌïòÍ≥† Ïã∂ÏúºÏã† Í≤ΩÏö∞, ÏòàÏïΩ/Íµ¨Îß§ Ï°∞Ìöå Î©îÎâ¥ÏóêÏÑú ÌôïÏù∏Ìï¥Ï£ºÏÑ∏Ïöî!");
            setModal(false);
        } catch (error) {
            console.error("Íµ¨Îß§ Ï§ë Ïò§Î•ò Î∞úÏÉù: ", error);
            alert("Íµ¨Îß§ Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.");
        }

    }

    // UseQuery
    const { data, error, isLoading } = useQuery({
        queryKey: ['salePosts', salePostId],
        queryFn: fetchSalePostData,
        enabled: !!salePostId,
        select: (data) => data.data,
        onSuccess: (data) => {
            setTotalPrice(data.price * quantity);
        }
    });

    // ÏàòÎüâ Î≥ÄÍ≤Ω Ïãú Ï¥ù Í∞ÄÍ≤© Î≥ÄÍ≤Ω
    useEffect(() => {
        if (data) {
            setTotalPrice(data.price * quantity);
        }
    }, [quantity, data]);

    /**
     * Ïù¥Î≤§Ìä∏ Ìï∏Îì§Îü¨
     */
    // ÏûÖÎ†•Í∞í Ïú†Ìö®ÏÑ± Í≤ÄÏ¶ù
    const validateInputs = () => {
        if (!phoneNumber || !email) {
            setErrorMessage("Ï†ÑÌôîÎ≤àÌò∏ÏôÄ Ïù¥Î©îÏùºÏùÑ Î™®Îëê ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.");
            return false;
        }
        setErrorMessage("");
        return true;
    }

    // Ï†úÏ∂ú ÏûÖÎ†• Ìèº Ïú†Ìö®ÏÑ± Í≤ÄÏ¶ù
    const handleSubmit = () => {
        if (validateInputs()) {
            handlePurchaseRequest();
        }
    }

    // ÏàòÎüâ Í∞êÏÜå
    const handleMinusClick = () => {
        if (quantity > 1) {
            setQuantity((prev) => prev - 1);
        }
    }

    // ÏàòÎüâ Ï¶ùÍ∞Ä
    const handlePlusClick = () => {
        setQuantity((prev) => prev + 1);
    }

    // Î™®Îã¨ ÌÜ†Í∏Ä
    const toggleModal = () => {
        setModal(!openModal);
    }
    
    return (
        <div className="w-full">
            {openModal &&
                <div
                    className="fixed top-0 left-0 z-50 w-full h-full bg-black bg-opacity-50 flex justify-center items-center"
                    onClick={toggleModal}>
                    <div
                        className='w-[40rem] h-[30rem] bg-white shadow-lg border border-black rounded-[0.875rem]
                        flex flex-col items-center justify-center gap-6 px-[10.421875rem] pb-8'
                        onClick={(e) => e.stopPropagation()}>
                        <div className="flex flex-col items-center justify-center gap-1">
                            <p className="weight-700 text-[1.375rem]">Íµ¨Îß§ ÏöîÏ≤≠</p>
                            {errorMessage && (
                                <p className="text-red-500 text-[0.875rem]">{errorMessage}</p>
                            )}
                        </div>

                        <div className="flex flex-col gap-3 mb-8">
                            <div className="flex flex-col">
                                <label className="text-[1rem] weight-700 pb-1">Ï†ÑÌôîÎ≤àÌò∏</label>
                                <input type="text"
                                       className="rounded-[0.7rem] w-[21.4878125rem] h-[2.8rem] bg-[#F1F1F1] px-[1.205rem]"
                                       placeholder="Ï†ÑÌôîÎ≤àÌò∏Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî"
                                       value={phoneNumber}
                                       onChange={(e) => setPhoneNumber(e.target.value)}
                                ></input>
                            </div>
                            <div className="flex flex-col">
                                <label className="text-[1rem] weight-700 pb-1">Ïù¥Î©îÏùº</label>
                                <input type="text"
                                       className="rounded-[0.7rem] w-[21.4878125rem] h-[2.8rem] bg-[#F1F1F1] px-[1.205rem]"
                                       placeholder="Ïù¥Î©îÏùºÏùÑ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî"
                                       value={email}
                                       onChange={(e) => setEmail(e.target.value)}
                                ></input>
                            </div>
                        </div>

                        <button
                            className="rounded-[0.5rem] weight-700 px-[7rem] py-[0.8rem] bg-[#FFA500] text-[1rem] text-[white]"
                            onClick={handleSubmit}>
                            Íµ¨Îß§ÌïòÍ∏∞
                        </button>
                    </div>
                </div>
            }

            <div className="flex flex-col items-center min-h-screen min-w-[76.6rem] bg-[#FFA500]">
                {/* ÏÉÅÎã® Î©îÎâ¥ */}
                <div className="flex flex-col items-center">
                    <h1 className="text-[2rem] weight-700 text-[white] pt-[4.15625rem]">Í≤ΩÏ£ºÏùò Î∞§ üå≤</h1>
                    <div className="flex gap-[1.371875rem] pt-[2.401875rem] pb-[2.1575rem] weight-700 text-[#FFA500]">
                        <button
                            className="rounded-[0.914375rem] weight-700 bg-[white] w-[10rem] py-[0.595rem] hover:bg-[#F18304] hover:text-[white]"
                            onClick={() => router.push('/certificationBoardList')}>SNS Ïù∏Ï¶ùÍ≤åÏãúÌåê
                        </button>
                        <button
                            className="rounded-[0.914375rem] weight-700 bg-[white] w-[10rem] py-[0.595rem] hover:bg-[#F18304] hover:text-[white]"
                            onClick={() => router.push('/quoteTalkList')}>Í≤¨Ï†ÅÌÜ°
                        </button>
                        <button
                            className="rounded-[0.914375rem] weight-700 bg-[white] w-[10rem] py-[0.595rem] hover:bg-[#F18304] hover:text-[white]"
                            onClick={() => router.push('/accommodateReservation')}>ÏàôÏÜå ÏòàÏïΩ
                        </button>
                        <button
                            className="rounded-[0.914375rem] weight-700 bg-[white] w-[10rem] py-[0.595rem] hover:bg-[#F18304] hover:text-[white]"
                            onClick={() => router.push('/campingReservation')}>Ï∫†ÌïëÏû• ÏòàÏïΩ
                        </button>
                        <button
                            className="rounded-[0.914375rem] weight-700 w-[10rem] py-[0.595rem] bg-[#F18304] text-[white]"
                            onClick={() => router.push('/ingredientsDelivery')}>ÏßÄÏó≠ Ïû¨Î£å ÏßÅÎ∞∞ÏÜ°
                        </button>
                        <button
                            className="rounded-[0.914375rem] weight-700 bg-[white] w-[10rem] py-[0.595rem] hover:bg-[#F18304] hover:text-[white]"
                            onClick={() => router.push('/reservationAuth')}>ÏòàÏïΩ Ï°∞Ìöå
                        </button>
                    </div>
                </div>

                {/* Ïª®ÌÖêÏ∏† ÏòÅÏó≠ */}
                <div className="rounded-t-3xl flex flex-col items-center w-full min-h-screen pt-[4rem] bg-white">
                    <div className='flex gap-16'>
                        <img src={data?.thumbnailPath} alt='campingDetail'
                             className='w-[25rem] h-[25rem] rounded-[0.875rem]'/>

                        <div className='flex flex-col justify-center gap-4'>
                            <div className="flex flex-col gap-5">
                                <div className="flex flex-col gap-1">
                                    <div className="flex items-center gap-2.5">
                                        <p className="text-[1.5rem] weight-700">{data?.name}</p>
                                        <p className="text-[1.125rem] weight-600">‚≠ê Ô∏è{data?.rating}</p>
                                    </div>
                                    <p className="weight-500 text-[#404040] whitespace-pre-line">{data?.shortDescription}</p>
                                </div>

                                <div className="flex justify-between w-full items-end">
                                    <p className="weight-700 text-[1.25rem]">{totalPrice.toLocaleString()}Ïõê</p>

                                    <div className="flex justify-between items-center rounded-[0.6rem] border-[#989898] border w-[6rem]">
                                        <div className="cursor-pointer py-[0.3125rem] px-[0.7rem]"
                                            onClick={handleMinusClick}>
                                            <p className="weight-600 text-[#727B8B]">-</p>
                                        </div>
                                        <div className="flex gap-0.5">
                                            <p className="weight-600">{quantity}</p>
                                            <p className="text-[#727B8B] weight-500">Í∞ú</p>
                                        </div>
                                        <div className="cursor-pointer py-[0.3125rem] px-[0.7rem]"
                                            onClick={handlePlusClick}>
                                            <p className="weight-500 text-[#727B8B]">+</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div className='flex flex-col justify-center pb-[1rem]'>
                                <hr/>
                            </div>

                            <div className="flex flex-col gap-1 mb-[20px]">
                                <p className="text-[1.2rem] weight-700">ÏÉÅÌíà Ï†ïÎ≥¥</p>
                                <p className="weight-500 text-[#404040] whitespace-pre-wrap">{data?.detailedDescription}</p>
                            </div>

                            <div className="flex flex-col gap-1 mb-[20px]">
                                <p className="text-[1.2rem] weight-700">ÌåêÎß§Ïûê</p>
                                <p className="weight-500 text-[#404040]">{data?.sellerName}</p>
                            </div>

                            <button
                                className="rounded-[8px] weight-700 w-full py-[1rem] bg-[#FFA500] text-[white] text-[1.2rem]"
                                onClick={() => {
                                    toggleModal();
                                }}
                            >
                                Íµ¨Îß§ÌïòÍ∏∞
                            </button>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    );
}